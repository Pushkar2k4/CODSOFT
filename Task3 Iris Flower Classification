{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8378418,"sourceType":"datasetVersion","datasetId":4982102}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:53:51.415359Z","iopub.execute_input":"2024-05-11T06:53:51.415742Z","iopub.status.idle":"2024-05-11T06:53:52.779184Z","shell.execute_reply.started":"2024-05-11T06:53:51.415713Z","shell.execute_reply":"2024-05-11T06:53:52.778035Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/task-3-iris-flower-classification/IRIS.csv\")\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:07.263144Z","iopub.execute_input":"2024-05-11T06:55:07.263503Z","iopub.status.idle":"2024-05-11T06:55:07.311840Z","shell.execute_reply.started":"2024-05-11T06:55:07.263479Z","shell.execute_reply":"2024-05-11T06:55:07.310870Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width      species\n0           5.1          3.5           1.4          0.2  Iris-setosa\n1           4.9          3.0           1.4          0.2  Iris-setosa\n2           4.7          3.2           1.3          0.2  Iris-setosa\n3           4.6          3.1           1.5          0.2  Iris-setosa\n4           5.0          3.6           1.4          0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:10.304114Z","iopub.execute_input":"2024-05-11T06:55:10.304586Z","iopub.status.idle":"2024-05-11T06:55:10.312463Z","shell.execute_reply.started":"2024-05-11T06:55:10.304553Z","shell.execute_reply":"2024-05-11T06:55:10.310928Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"(150, 5)"},"metadata":{}}]},{"cell_type":"code","source":"df.info","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:12.805893Z","iopub.execute_input":"2024-05-11T06:55:12.806531Z","iopub.status.idle":"2024-05-11T06:55:12.823480Z","shell.execute_reply.started":"2024-05-11T06:55:12.806501Z","shell.execute_reply":"2024-05-11T06:55:12.822410Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"<bound method DataFrame.info of      sepal_length  sepal_width  petal_length  petal_width         species\n0             5.1          3.5           1.4          0.2     Iris-setosa\n1             4.9          3.0           1.4          0.2     Iris-setosa\n2             4.7          3.2           1.3          0.2     Iris-setosa\n3             4.6          3.1           1.5          0.2     Iris-setosa\n4             5.0          3.6           1.4          0.2     Iris-setosa\n..            ...          ...           ...          ...             ...\n145           6.7          3.0           5.2          2.3  Iris-virginica\n146           6.3          2.5           5.0          1.9  Iris-virginica\n147           6.5          3.0           5.2          2.0  Iris-virginica\n148           6.2          3.4           5.4          2.3  Iris-virginica\n149           5.9          3.0           5.1          1.8  Iris-virginica\n\n[150 rows x 5 columns]>"},"metadata":{}}]},{"cell_type":"code","source":"X = df.drop(\"species\",axis=1)\nX.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:15.682103Z","iopub.execute_input":"2024-05-11T06:55:15.682682Z","iopub.status.idle":"2024-05-11T06:55:15.703557Z","shell.execute_reply.started":"2024-05-11T06:55:15.682631Z","shell.execute_reply":"2024-05-11T06:55:15.702245Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width\n0           5.1          3.5           1.4          0.2\n1           4.9          3.0           1.4          0.2\n2           4.7          3.2           1.3          0.2\n3           4.6          3.1           1.5          0.2\n4           5.0          3.6           1.4          0.2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y = df[\"species\"]\ny.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:18.277277Z","iopub.execute_input":"2024-05-11T06:55:18.277729Z","iopub.status.idle":"2024-05-11T06:55:18.286082Z","shell.execute_reply.started":"2024-05-11T06:55:18.277696Z","shell.execute_reply":"2024-05-11T06:55:18.284877Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"0    Iris-setosa\n1    Iris-setosa\n2    Iris-setosa\n3    Iris-setosa\n4    Iris-setosa\nName: species, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train , X_test, y_train , y_test = train_test_split(X, y, test_size=0.2, random_state=2)\n\n\nclassifier = KNeighborsClassifier(n_neighbors=50)\nclassifier.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:20.929222Z","iopub.execute_input":"2024-05-11T06:55:20.929562Z","iopub.status.idle":"2024-05-11T06:55:20.947743Z","shell.execute_reply.started":"2024-05-11T06:55:20.929537Z","shell.execute_reply":"2024-05-11T06:55:20.946873Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=50)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=50)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=50)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train , X_test, y_train , y_test = train_test_split(X, y, test_size=0.2, random_state=2)\nprint(y_test)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:23.741037Z","iopub.execute_input":"2024-05-11T06:55:23.741966Z","iopub.status.idle":"2024-05-11T06:55:23.752230Z","shell.execute_reply.started":"2024-05-11T06:55:23.741917Z","shell.execute_reply":"2024-05-11T06:55:23.751189Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"6          Iris-setosa\n3          Iris-setosa\n113     Iris-virginica\n12         Iris-setosa\n24         Iris-setosa\n129     Iris-virginica\n25         Iris-setosa\n108     Iris-virginica\n128     Iris-virginica\n45         Iris-setosa\n48         Iris-setosa\n42         Iris-setosa\n35         Iris-setosa\n5          Iris-setosa\n85     Iris-versicolor\n54     Iris-versicolor\n41         Iris-setosa\n96     Iris-versicolor\n144     Iris-virginica\n89     Iris-versicolor\n77     Iris-versicolor\n74     Iris-versicolor\n115     Iris-virginica\n94     Iris-versicolor\n87     Iris-versicolor\n29         Iris-setosa\n2          Iris-setosa\n127     Iris-virginica\n44         Iris-setosa\n125     Iris-virginica\nName: species, dtype: object\n","output_type":"stream"}]},{"cell_type":"code","source":"print(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:26.913827Z","iopub.execute_input":"2024-05-11T06:55:26.914189Z","iopub.status.idle":"2024-05-11T06:55:26.926161Z","shell.execute_reply.started":"2024-05-11T06:55:26.914163Z","shell.execute_reply":"2024-05-11T06:55:26.924851Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"     sepal_length  sepal_width  petal_length  petal_width\n6             4.6          3.4           1.4          0.3\n3             4.6          3.1           1.5          0.2\n113           5.7          2.5           5.0          2.0\n12            4.8          3.0           1.4          0.1\n24            4.8          3.4           1.9          0.2\n129           7.2          3.0           5.8          1.6\n25            5.0          3.0           1.6          0.2\n108           6.7          2.5           5.8          1.8\n128           6.4          2.8           5.6          2.1\n45            4.8          3.0           1.4          0.3\n48            5.3          3.7           1.5          0.2\n42            4.4          3.2           1.3          0.2\n35            5.0          3.2           1.2          0.2\n5             5.4          3.9           1.7          0.4\n85            6.0          3.4           4.5          1.6\n54            6.5          2.8           4.6          1.5\n41            4.5          2.3           1.3          0.3\n96            5.7          2.9           4.2          1.3\n144           6.7          3.3           5.7          2.5\n89            5.5          2.5           4.0          1.3\n77            6.7          3.0           5.0          1.7\n74            6.4          2.9           4.3          1.3\n115           6.4          3.2           5.3          2.3\n94            5.6          2.7           4.2          1.3\n87            6.3          2.3           4.4          1.3\n29            4.7          3.2           1.6          0.2\n2             4.7          3.2           1.3          0.2\n127           6.1          3.0           4.9          1.8\n44            5.1          3.8           1.9          0.4\n125           7.2          3.2           6.0          1.8\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred = classifier.predict(X_test)\ny_pred","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:30.027217Z","iopub.execute_input":"2024-05-11T06:55:30.027595Z","iopub.status.idle":"2024-05-11T06:55:30.043460Z","shell.execute_reply.started":"2024-05-11T06:55:30.027566Z","shell.execute_reply":"2024-05-11T06:55:30.042238Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"array(['Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-setosa',\n       'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-virginica',\n       'Iris-virginica', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n       'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor',\n       'Iris-setosa', 'Iris-versicolor', 'Iris-virginica',\n       'Iris-versicolor', 'Iris-virginica', 'Iris-versicolor',\n       'Iris-virginica', 'Iris-versicolor', 'Iris-versicolor',\n       'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-setosa',\n       'Iris-virginica'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test,y_pred)\nprint(\"Accuracy:\",acc)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:34.484784Z","iopub.execute_input":"2024-05-11T06:55:34.485835Z","iopub.status.idle":"2024-05-11T06:55:34.492742Z","shell.execute_reply.started":"2024-05-11T06:55:34.485767Z","shell.execute_reply":"2024-05-11T06:55:34.491621Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"Accuracy: 0.9\n","output_type":"stream"}]},{"cell_type":"code","source":"X_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:36.917492Z","iopub.execute_input":"2024-05-11T06:55:36.918009Z","iopub.status.idle":"2024-05-11T06:55:36.938910Z","shell.execute_reply.started":"2024-05-11T06:55:36.917971Z","shell.execute_reply":"2024-05-11T06:55:36.938162Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"     sepal_length  sepal_width  petal_length  petal_width\n6             4.6          3.4           1.4          0.3\n3             4.6          3.1           1.5          0.2\n113           5.7          2.5           5.0          2.0\n12            4.8          3.0           1.4          0.1\n24            4.8          3.4           1.9          0.2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6</th>\n      <td>4.6</td>\n      <td>3.4</td>\n      <td>1.4</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>113</th>\n      <td>5.7</td>\n      <td>2.5</td>\n      <td>5.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>4.8</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>4.8</td>\n      <td>3.4</td>\n      <td>1.9</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:41.604543Z","iopub.execute_input":"2024-05-11T06:55:41.604921Z","iopub.status.idle":"2024-05-11T06:55:41.615108Z","shell.execute_reply.started":"2024-05-11T06:55:41.604891Z","shell.execute_reply":"2024-05-11T06:55:41.613727Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"6         Iris-setosa\n3         Iris-setosa\n113    Iris-virginica\n12        Iris-setosa\n24        Iris-setosa\nName: species, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:44.396390Z","iopub.execute_input":"2024-05-11T06:55:44.396763Z","iopub.status.idle":"2024-05-11T06:55:44.420896Z","shell.execute_reply.started":"2024-05-11T06:55:44.396735Z","shell.execute_reply":"2024-05-11T06:55:44.419823Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"       sepal_length  sepal_width  petal_length  petal_width\ncount    150.000000   150.000000    150.000000   150.000000\nmean       5.843333     3.054000      3.758667     1.198667\nstd        0.828066     0.433594      1.764420     0.763161\nmin        4.300000     2.000000      1.000000     0.100000\n25%        5.100000     2.800000      1.600000     0.300000\n50%        5.800000     3.000000      4.350000     1.300000\n75%        6.400000     3.300000      5.100000     1.800000\nmax        7.900000     4.400000      6.900000     2.500000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.843333</td>\n      <td>3.054000</td>\n      <td>3.758667</td>\n      <td>1.198667</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.828066</td>\n      <td>0.433594</td>\n      <td>1.764420</td>\n      <td>0.763161</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.300000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.100000</td>\n      <td>2.800000</td>\n      <td>1.600000</td>\n      <td>0.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.800000</td>\n      <td>3.000000</td>\n      <td>4.350000</td>\n      <td>1.300000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.400000</td>\n      <td>3.300000</td>\n      <td>5.100000</td>\n      <td>1.800000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.900000</td>\n      <td>4.400000</td>\n      <td>6.900000</td>\n      <td>2.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data= df.values\nX = data[:,0:4]\nY = data[:,4]\nprint(Y)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:47.761334Z","iopub.execute_input":"2024-05-11T06:55:47.761709Z","iopub.status.idle":"2024-05-11T06:55:47.768396Z","shell.execute_reply.started":"2024-05-11T06:55:47.761678Z","shell.execute_reply":"2024-05-11T06:55:47.767310Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"['Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n 'Iris-versicolor' 'Iris-versicolor' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica']\n","output_type":"stream"}]},{"cell_type":"code","source":"print(X)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:52.008774Z","iopub.execute_input":"2024-05-11T06:55:52.009167Z","iopub.status.idle":"2024-05-11T06:55:52.016296Z","shell.execute_reply.started":"2024-05-11T06:55:52.009140Z","shell.execute_reply":"2024-05-11T06:55:52.015197Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"[[5.1 3.5 1.4 0.2]\n [4.9 3.0 1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.0 3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.0 3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.0 1.4 0.1]\n [4.3 3.0 1.1 0.1]\n [5.8 4.0 1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.0 0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.0 3.0 1.6 0.2]\n [5.0 3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.0 3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.0 1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.0 3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.0 3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.0 1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.0 3.3 1.4 0.2]\n [7.0 3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.0 1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1.0]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.0 2.0 3.5 1.0]\n [5.9 3.0 4.2 1.5]\n [6.0 2.2 4.0 1.0]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.0 4.5 1.5]\n [5.8 2.7 4.1 1.0]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.0 1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.0 4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.0 5.0 1.7]\n [6.0 2.9 4.5 1.5]\n [5.7 2.6 3.5 1.0]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1.0]\n [5.8 2.7 3.9 1.2]\n [6.0 2.7 5.1 1.6]\n [5.4 3.0 4.5 1.5]\n [6.0 3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.0 4.1 1.3]\n [5.5 2.5 4.0 1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.0 4.6 1.4]\n [5.8 2.6 4.0 1.2]\n [5.0 2.3 3.3 1.0]\n [5.6 2.7 4.2 1.3]\n [5.7 3.0 4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.0 1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.0 2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.0 5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.0 5.8 2.2]\n [7.6 3.0 6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2.0]\n [6.4 2.7 5.3 1.9]\n [6.8 3.0 5.5 2.1]\n [5.7 2.5 5.0 2.0]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.0 5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.0 2.2 5.0 1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2.0]\n [7.7 2.8 6.7 2.0]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.0 1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.0 4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.0 5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2.0]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.0 6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.0 3.0 4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.0 5.2 2.3]\n [6.3 2.5 5.0 1.9]\n [6.5 3.0 5.2 2.0]\n [6.2 3.4 5.4 2.3]\n [5.9 3.0 5.1 1.8]]\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:56.893539Z","iopub.execute_input":"2024-05-11T06:55:56.893940Z","iopub.status.idle":"2024-05-11T06:55:56.906683Z","shell.execute_reply.started":"2024-05-11T06:55:56.893910Z","shell.execute_reply":"2024-05-11T06:55:56.905872Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"                 precision    recall  f1-score   support\n\n    Iris-setosa       1.00      1.00      1.00        14\nIris-versicolor       0.78      0.88      0.82         8\n Iris-virginica       0.86      0.75      0.80         8\n\n       accuracy                           0.90        30\n      macro avg       0.88      0.88      0.87        30\n   weighted avg       0.90      0.90      0.90        30\n\n","output_type":"stream"}]},{"cell_type":"code","source":"cm = confusion_matrix( y_test, y_pred)\nprint(cm)\nsns.heatmap(cm, annot=True)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T06:55:59.509234Z","iopub.execute_input":"2024-05-11T06:55:59.509927Z","iopub.status.idle":"2024-05-11T06:55:59.792111Z","shell.execute_reply.started":"2024-05-11T06:55:59.509894Z","shell.execute_reply":"2024-05-11T06:55:59.790865Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"[[14  0  0]\n [ 0  7  1]\n [ 0  2  6]]\n","output_type":"stream"},{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]}]}